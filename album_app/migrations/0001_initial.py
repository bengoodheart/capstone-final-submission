# Generated by Django 4.0.4 on 2022-05-09 20:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('albumID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('albumName', models.CharField(max_length=300)),
                ('release_date', models.DateField(default=datetime.date(2022, 1, 1))),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('artistID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('artistName', models.CharField(max_length=300, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genreID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('genreName', models.CharField(max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageUrl',
            fields=[
                ('urlID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(default='https://upload.wikimedia.org/wikipedia/commons/2/27/Red_square.svg')),
            ],
        ),
        migrations.CreateModel(
            name='RecordLabel',
            fields=[
                ('recordLabelID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recordLabelName', models.CharField(max_length=200, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserListenedTo',
            fields=[
                ('ultID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('FK_release_date_LT', models.DateField(default='2022-01-01')),
                ('FK_ratingLT', models.DecimalField(decimal_places=1, default=7.5, max_digits=5)),
                ('relisten', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('FK_albumID_userLT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album_app.album')),
                ('FK_artistID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album_app.artist')),
                ('FK_recordLabelID_LT', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.recordlabel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Released',
            fields=[
                ('releasedID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_recordLabelName', models.CharField(blank=True, default='Self-Released', max_length=100, null=True)),
                ('display_album_name', models.CharField(blank=True, default='Album Name', max_length=300, null=True)),
                ('FK_albumID_Released', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.album')),
                ('FK_recordLabelID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.recordlabel')),
            ],
            options={
                'verbose_name_plural': 'Releases',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hasSpotify', models.BooleanField(default=False)),
                ('spotifyAccessToken', models.CharField(blank=True, max_length=500, null=True)),
                ('spotifyRefreshToken', models.CharField(blank=True, max_length=500, null=True)),
                ('hasApple', models.BooleanField(default=False)),
                ('bandcampUserName', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaysOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_album_name', models.CharField(blank=True, max_length=300, null=True)),
                ('display_artist_name', models.CharField(blank=True, max_length=300, null=True)),
                ('FK_albumID_PlaysOn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album_app.album')),
                ('FK_artistID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album_app.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_ticket_num', models.AutoField(primary_key=True, serialize=False)),
                ('made_on', models.DateTimeField(auto_now=True)),
                ('feedback_text', models.TextField()),
                ('category', models.CharField(choices=[('BUG', 'Bug'), ('DESIGN', 'Design'), ('SUGGESTION', 'Suggestion'), ('MISC', 'Misc')], default='Bug', max_length=50)),
                ('made_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Describe',
            fields=[
                ('describeID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_album_name', models.CharField(default='Album Name', max_length=300)),
                ('display_genre_name', models.CharField(blank=True, max_length=100, null=True)),
                ('FK_albumID_Describe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.album')),
                ('FK_genreID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.genre')),
            ],
        ),
        migrations.CreateModel(
            name='BandcampUserName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bc_username', models.CharField(default='Not Set', max_length=100)),
                ('FK_user_bc_scraper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AlbumArt',
            fields=[
                ('artID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_album_name', models.CharField(max_length=300, null=True)),
                ('urlID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album_app.imageurl')),
            ],
            options={
                'verbose_name_plural': 'Album Art',
            },
        ),
        migrations.AddField(
            model_name='album',
            name='FK_artID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='album_app.albumart'),
        ),
    ]
